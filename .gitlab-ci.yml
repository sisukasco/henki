image: golang:1.17

stages:
  - test
  - build
  - deploy_docker

variables:
  REPO_NAME: gitlab.com/sisukasco/henki
  POSTGRES_DB: authdb_dev # Set database.
  POSTGRES_USER: authuserMpWapdM # Set username.
  POSTGRES_PASSWORD: NfZbCi2AVgKFam5Lvj3riui4LcjmMKWM
  POSTGRES_HOST_AUTH_METHOD: "trust"
  HENKI_DB_URL: postgres://authuserMpWapdM:NfZbCi2AVgKFam5Lvj3riui4LcjmMKWM@postgres:5432/authdb_dev?sslmode=disable

build:
  stage: build
  script:
    - mkdir -p ./deploy/bin
    - source ./version
    - BUILD_TIME=$(date) CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-X 'github.com/sisukasco/henki/pkg/version.BuildTime=$BUILD_TIME' -X 'github.com/sisukasco/henki/pkg/version.Version=$VERSION'" -a -installsuffix cgo -o ./deploy/bin/henki ./cmd
    
  artifacts:
    paths:
      - deploy/bin

# TODO: Get the unit tests working in the pipeline
# unit_tests:
#   stage: test
#   script: 
#     - export HENKI_DB_URL=$HENKI_DB_URL && bash run.sh migrate dev
#     - export HENKI_DB_URL=$HENKI_DB_URL && bash run.sh test local
#   services:
#     - postgres:13-alpine
# 

unit_tests:
  stage: test
  script: 
    - export HENKI_REDIS_URL=redis://redis:6379/1
    - export HENKI_DB_COMMON=1
    - export HENKI_DB_URL=$HENKI_DB_URL 
    - go run ./cmd --source ./pkg/db/migrations  --conf conf-dev.yaml migrate up
    - export SISUKAS_LOGGED_IN_USER_FOR_TESTING=testing_user
    - go test -p 1 -count=1 $(go list ./...)
  services:
    - postgres:13-alpine
    - redis:6-alpine


deploy_docker:
   stage: deploy_docker
   image: docker:20
   only:
      - main
   services:
      - docker:20-dind
   before_script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
   script:
      - source ./version
      - mkdir -p ./deploy/migrations
      - cp ./pkg/db/migrations/* ./deploy/migrations
      - docker build -t registry.gitlab.com/sisukasco/henki -t registry.gitlab.com/sisukasco/henki:$VERSION ./deploy
      - docker push registry.gitlab.com/sisukasco/henki --all-tags
      - echo "deployed "


